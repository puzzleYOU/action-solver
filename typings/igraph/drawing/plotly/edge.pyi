"""
This type stub file was generated by pyright.
"""

from igraph.drawing.baseclasses import AbstractEdgeDrawer

"""Drawers for various edge styles in Matplotlib graph plots."""
__all__ = ("PlotlyEdgeDrawer", )
plotly = ...
class PlotlyEdgeDrawer(AbstractEdgeDrawer):
    """Matplotlib-specific abstract edge drawer object."""
    def __init__(self, context, palette) -> None:
        """Constructs the edge drawer.

        @param context: a plotly Figure object on which the edges will be
            drawn.
        @param palette: the palette that can be used to map integer color
            indices to colors when drawing edges
        """
        ...
    
    def draw_directed_edge(self, edge, src_vertex, dest_vertex): # -> None:
        ...
    
    def draw_loop_edge(self, edge, vertex): # -> None:
        """Draws a loop edge.

        The default implementation draws a small circle.

        @param edge: the edge to be drawn. Visual properties of the edge
          are defined by the attributes of this object.
        @param vertex: the vertex to which the edge is attached. Visual
          properties are given again as attributes.
        """
        ...
    
    def draw_undirected_edge(self, edge, src_vertex, dest_vertex): # -> None:
        """Draws an undirected edge.

        The default implementation of this method draws undirected edges
        as straight lines. Loop edges are drawn as small circles.

        @param edge: the edge to be drawn. Visual properties of the edge
          are defined by the attributes of this object.
        @param src_vertex: the source vertex. Visual properties are given
          again as attributes.
        @param dest_vertex: the target vertex. Visual properties are given
          again as attributes.
        """
        ...
    


