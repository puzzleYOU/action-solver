"""
This type stub file was generated by pyright.
"""

from igraph.drawing.baseclasses import AbstractVertexDrawer
from .base import AbstractCairoDrawer

"""This module provides implementations of Cairo-specific vertex drawers, i.e.
drawers that the Cairo graph drawer will use to draw vertices.
"""
__all__ = ("AbstractCairoVertexDrawer", "CairoVertexDrawer")
class AbstractCairoVertexDrawer(AbstractVertexDrawer, AbstractCairoDrawer):
    """Abstract base class for vertex drawers that draw on a Cairo canvas."""
    def __init__(self, context, bbox, palette, layout) -> None:
        """Constructs the vertex drawer and associates it to the given
        Cairo context and the given L{BoundingBox}.

        @param context: the context on which we will draw
        @param bbox:    the bounding box within which we will draw.
                        Can be anything accepted by the constructor
                        of L{BoundingBox} (i.e., a 2-tuple, a 4-tuple
                        or a L{BoundingBox} object).
        @param palette: the palette that can be used to map integer
                        color indices to colors when drawing vertices
        @param layout:  the layout of the vertices in the graph being drawn
        """
        ...
    


class CairoVertexDrawer(AbstractCairoVertexDrawer):
    """The default vertex drawer implementation of igraph."""
    def __init__(self, context, bbox, palette, layout) -> None:
        ...
    
    def draw(self, visual_vertex, vertex, coords): # -> None:
        ...
    


